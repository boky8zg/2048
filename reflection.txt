@package: game2048
	@class: game2048.Main
		@method: main
			@param: java.lang.String[]
			@return: void
@package: model
	@class: model.Orientation
		@method: values
			@return: model.Orientation[]
		@method: valueOf
			@param: java.lang.String
			@return: model.Orientation
@package: reflection
	@class: reflection.ProjectReflection
		@method: getClasses
			@return: java.lang.String[]
		@method: getPackages
			@return: java.lang.String[]
		@method: output
			@return: void
		@method: getClassesInPackage
			@param: java.lang.String
			@return: java.util.List
		@method: getClassMethods
			@param: java.lang.String
			@return: java.lang.reflect.Method[]
@package: thread
	@class: thread.FrameRedrawThread
		@method: run
			@return: void
@package: view
	@class: view.Canvas
		@method: keyPressed
			@param: java.awt.event.KeyEvent
			@return: void
		@method: keyReleased
			@param: java.awt.event.KeyEvent
			@return: void
		@method: keyTyped
			@param: java.awt.event.KeyEvent
			@return: void
		@method: getBoard
			@return: view.elements.Board
		@method: paintComponent
			@param: java.awt.Graphics
			@return: void
		@method: turnOnAntialiasing
			@param: java.awt.Graphics
			@return: void
	@class: view.MainWindow
		@method: initialize
			@return: void
		@method: setMainWindowIcon
			@return: void
		@method: createCanvas
			@return: void
		@method: createMainWindow
			@return: void
	@class: view.elements.Board
		@method: newField
			@return: boolean
		@method: repaint
			@return: void
		@method: draw
			@param: java.awt.Graphics
			@return: void
		@method: movement
			@param: model.Orientation
			@return: void
		@method: isAnimating
			@return: boolean
		@method: setupBoardDefaults
			@return: void
		@method: setupFieldDefaults
			@return: void
		@method: colToX
			@param: int
			@return: int
		@method: drawBoard
			@param: java.awt.Graphics
			@return: void
		@method: drawFields
			@param: java.awt.Graphics
			@return: void
		@method: drawEmptyField
			@param: java.awt.Graphics
			@param: int
			@param: int
			@return: void
		@method: isRepaintNeeded
			@return: boolean
		@method: countEmptyFields
			@return: int
		@method: rowToY
			@param: int
			@return: int
		@method: drawEmptyFields
			@param: java.awt.Graphics
			@return: void
	@class: view.elements.Field
		@method: doubleValue
			@return: void
		@method: getValue
			@return: int
		@method: getHeight
			@return: int
		@method: getWidth
			@return: int
		@method: draw
			@param: java.awt.Graphics
			@return: void
		@method: setWidth
			@param: int
			@return: void
		@method: isAnimating
			@return: boolean
		@method: getMoveBy
			@return: int
		@method: getFadeBy
			@return: float
		@method: setRadius
			@param: int
			@return: void
		@method: moveToY
			@param: int
			@return: void
		@method: moveToX
			@param: int
			@return: void
		@method: setMoveBy
			@param: int
			@return: void
		@method: setFadeBy
			@param: float
			@return: void
		@method: appear
			@return: void
		@method: setHeight
			@param: int
			@return: void
		@method: getRadius
			@return: int
		@method: getForegroundColors
			@return: java.awt.Color[]
		@method: getBackgroundColors
			@return: java.awt.Color[]
		@method: setBackgroundColors
			@param: java.awt.Color[]
			@return: void
		@method: setForegroundColors
			@param: java.awt.Color[]
			@return: void
		@method: nextAnimationFrame
			@return: void
		@method: nextAppearAnimationFrame
			@return: void
		@method: nextMoveAnimationFrame
			@return: void
@package: view.elements
	@class: view.elements.Board
		@method: newField
			@return: boolean
		@method: repaint
			@return: void
		@method: draw
			@param: java.awt.Graphics
			@return: void
		@method: movement
			@param: model.Orientation
			@return: void
		@method: isAnimating
			@return: boolean
		@method: setupBoardDefaults
			@return: void
		@method: setupFieldDefaults
			@return: void
		@method: colToX
			@param: int
			@return: int
		@method: drawBoard
			@param: java.awt.Graphics
			@return: void
		@method: drawFields
			@param: java.awt.Graphics
			@return: void
		@method: drawEmptyField
			@param: java.awt.Graphics
			@param: int
			@param: int
			@return: void
		@method: isRepaintNeeded
			@return: boolean
		@method: countEmptyFields
			@return: int
		@method: rowToY
			@param: int
			@return: int
		@method: drawEmptyFields
			@param: java.awt.Graphics
			@return: void
	@class: view.elements.Field
		@method: doubleValue
			@return: void
		@method: getValue
			@return: int
		@method: getHeight
			@return: int
		@method: getWidth
			@return: int
		@method: draw
			@param: java.awt.Graphics
			@return: void
		@method: setWidth
			@param: int
			@return: void
		@method: isAnimating
			@return: boolean
		@method: getMoveBy
			@return: int
		@method: getFadeBy
			@return: float
		@method: setRadius
			@param: int
			@return: void
		@method: moveToY
			@param: int
			@return: void
		@method: moveToX
			@param: int
			@return: void
		@method: setMoveBy
			@param: int
			@return: void
		@method: setFadeBy
			@param: float
			@return: void
		@method: appear
			@return: void
		@method: setHeight
			@param: int
			@return: void
		@method: getRadius
			@return: int
		@method: getForegroundColors
			@return: java.awt.Color[]
		@method: getBackgroundColors
			@return: java.awt.Color[]
		@method: setBackgroundColors
			@param: java.awt.Color[]
			@return: void
		@method: setForegroundColors
			@param: java.awt.Color[]
			@return: void
		@method: nextAnimationFrame
			@return: void
		@method: nextAppearAnimationFrame
			@return: void
		@method: nextMoveAnimationFrame
			@return: void
